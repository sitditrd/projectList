<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="logIn" width="1278" height="951" titletext="LogIn Frame" onload="logIn_onload" onsize="logIn_onsize" background="#23384b" ontimer="logIn_ontimer" onkeydown="logIn_onkeydown">
    <Layouts>
      <Layout height="951" mobileorientation="landscape" width="1278" screenid="ScreenDeskTop">
        <Div id="div_login" taborder="0" left="41%" top="32.18%" width="230" height="338">
          <Layouts>
            <Layout>
              <ImageViewer id="img_logo" taborder="5" left="0" top="0" height="65" right="0" cssclass="img_LF_Logo"/>
              <Static id="sta_userId" taborder="6" left="0" top="88" height="58" right="0" cssclass="sta_LOGIN_FieldBg"/>
              <Static id="sta_pwd" taborder="7" left="0" top="154" height="58" right="0" cssclass="sta_LOGIN_FieldBg"/>
              <ImageViewer id="img_userId" taborder="8" left="0" top="104" width="30" height="29" cssclass="img_LF_LogId"/>
              <ImageViewer id="img_pwd" taborder="9" left="0" top="170" width="30" height="29" cssclass="img_LF_LogPwd"/>
              <Edit id="edt_userId" taborder="0" left="40" top="108" height="21" right="0" cssclass="edi_LOGIN_IdPwd" displaynulltext="아이디 입력" inputmode="normal" oninput="div_login_edt_userId_oninput"/>
              <Edit id="edt_pwd" taborder="1" left="40" top="174" height="21" right="0" cssclass="edi_LOGIN_IdPwd" displaynulltext="비밀번호 입력" password="true"/>
              <Button id="btn_login" taborder="2" text="로그인" left="0" height="45" right="0" bottom="0" cssclass="btn_LOGIN_Action" onclick="div_login_btn_login_onclick"/>
              <CheckBox id="chk_userId" taborder="3" text="아이디저장" left="33" top="230" width="78" height="28" cssclass="chk_LOGIN_IdSave"/>
              <Static id="sta_question" taborder="4" text="문의하기" top="233" height="23" right="33" width="50" onclick="Div00_Static02_onclick" cssclass="sta_LOGIN_Help"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = nexacro.getApplication();
this.Qualifyier;
this.countVal;
this.MsgCheck = [];
this.strId;
this.strPw;

this.logIn_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	if(nexacro.getApplication().id == "nexacro17MDI"){
		this.Qualifyier = nexacro.getApplication().mainframe.VFrameSet.TopFrame.form;
    }
	this.div_login.form.set_scrollbartype("none");
	this.logIn_onsize();
	this.div_login.form.edt_userId.setFocus();
};

this.logIn_ontimer = function(obj:nexacro.Form,e:nexacro.TimerEventInfo)
{
// 	this.objApp.mainframe.VFrameSet.TopFrame.set_formurl("frame::top.xfdl");
// 	this.objApp.mainframe.VFrameSet.OpenMenuFrame.set_formurl("frame::openMenu.xfdl");
// 	this.objApp.mainframe.VFrameSet.HomeFrame.set_formurl("frame::home.xfdl");
	
	this.nTemp = this.countVal;
	
	//timerid가 1일때만 수행
	if(e.timerid == 1)
	{
		if(!(this.nTemp > this.countVal))
		{
			this.killTimer(1);
			var objFrame = new ChildFrame();
				var objParentFrame = this.getOwnerFrame();
				objFrame.init( "comAlert", 0, 0, 400, 400 );
				objFrame.set_formurl( "sample::comAlert.xfdl" );
				objFrame.set_overlaycolor("transparent"); 
				objFrame.set_openalign("center middle");
				objFrame.showModal( "comAlert", objParentFrame, null, this, this.fn_callback );
		}
	}
};

this.logIn_onsize = function(obj:nexacro.Form,e:nexacro.SizeEventInfo)
{
	var nLeft = (this.objApp.mainframe.width / 2) - Math.round((this.div_login.form.getOffsetWidth()) / 2);
	var nTop = (this.objApp.mainframe.height / 2) - Math.round((this.div_login.form.getOffsetHeight()) / 2);
	
	if (nLeft <= 0)
	{
		this.div_login.form.setOffsetLeft(0);
	}
	else
	{
		this.div_login.setOffsetLeft(nLeft);
		this.div_login.setOffsetTop(nTop);
	}
};

this.div_login_btn_login_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fn_dologin();
};

this.fn_dologin = function()
{
	this.strId = this.div_login.form.edt_userId.value;
	this.strPw = this.div_login.form.edt_pwd.value;
	
	if(nexacro.getApplication().id == "nexacro17MDI")
	{
		this.objApp.mainframe.VFrameSet.set_separatesize("0,64,33,*,0");
	}else{
		this.getOwnerFrame().form.div_lgn.set_visible(false);
	}
	this.objApp.gdsMessage.clearData();
	//Push server ip 셋팅(전용브라우저 10081, HTML 10080// ip 변경은 xpush 설치경로/conf/xpush_config.xml 수정)
	if(system.navigatorname == "nexacro"){
		this.XPush00.set_iplist("tcp://14.63.224.112:10081");
	}else{
		this.XPush00.set_iplist("http://14.63.224.112:10080");
	}

	this.XPush00.connect(this.div_login.form.edt_userId.value);
	
	//메뉴생성
	if(nexacro.getApplication().id == "nexacro17MDI"){
		this.Qualifyier.initTopMenu();
		this.Qualifyier.div_top.form.img_userInfo.set_image("URL('theme://images/test_admin.jpg')");
		if(this.strId.indexOf("user0") > -1){
			this.Qualifyier.div_top.form.div_topBtn.form.btn_3001.set_visible(false);
			this.Qualifyier.div_top.form.img_userInfo.set_image("URL('theme://images/test_person2.jpg')");
		}else{
			this.Qualifyier.initTopMenu();
		}
	}
}

this.XPush00_onerror = function(obj:nexacro.XPush,e:nexacro.XPushErrorEventInfo)
{
// 	alert("XPush00_onerror Event\n" + 
// 		" - action: " + e.action + "\n" +
// 		" - errormsg: " + e.errormsg + "\n" + 
// 		" - errortype: " + e.errortype + "\n" + 
// 		" - eventid: " + e.eventid + "\n" + 
// 		" - message: " + e.message + "\n" + 
// 		" - serverip: " + e.serverip + "\n" + 
// 		" - serverport: " + e.serverport + "\n");

	if (e.message != null)
	{
		trace("e.message != null\n" +
          "e.message.messagetype: " + e.message.messagetype + "\n" +
          "e.message.messagekey: " + e.message.messagekey + "\n" +
          "e.message.messageid: " + e.message.messageid + "\n");
	}
};

this.XPush00_onsuccess = function(obj:nexacro.XPush,e:nexacro.XPushEventInfo)
{
// 	trace("XPush00_onsuccess Event\n" +
// 		" - action: " + e.action + "\n" +
// 		" - eventid: " + e.eventid + "\n" + 
// 		" - e.message: " + e.message + "\n" +
// 		" - e.returnvalue : " + e.returnvalue +
// 		" - serverip: " + e.serverip + "\n" + 
// 		" - serverport: " + e.serverport + "\n"
// 		);
		
	if (e.message != null)
	  {
// 		trace("e.message != null\n" +
// 			  "e.message.messagetype: " + e.message.messagetype + "\n" +
// 			  "e.message.messagekey: " + e.message.messagekey + "\n" +
// 			  "e.message.messageid: " + e.message.messageid + "\n");

// 		if(e.message.returnvalue != undefined || e.message.returnvalue != null)
// 		{
// 		  var returnvalue = e.message.returnvalue;
// 		  for(var i = 0; i < returnvalue.length; i++)
// 			trace("index:" + i + " : " + returnvalue[i].topictype + " : " + returnvalue[i].topicid + " : " + returnvalue[i].count);
// 		}
	  }
		
	if (e.action == 10 && e.message != null)//requestMessageCount() 메소드로 미수신된 신뢰성 메시지 갯수요청에 성공했을 때
	{
		this.countVal = e.returnvalue;
		//alert("e.message != null\n" +
// 		trace("e.message != null\n" +
// 			" - e.message.messagekey: " + e.message.messagekey + "\n" +
// 			" - e.message.messageid: " + e.message.messageid + "\n" +
// 			" - e.message.returnvalue: " + e.message.returnvalue + "\n" +
// 			" - e.message.devicetoken: " + e.message.devicetoken);
// 		if(e.message.returnvalue != undefined || e.message.returnvalue != null) {
// 			var returnvalue = e.message.returnvalue;
// 			for(var i = 0; i < returnvalue.length; i++) {
// 				alert("index:" + i + " : " + returnvalue[i].topictype + " : " + returnvalue[i].topicid + " : " + returnvalue[i].count);
// 				//trace("index:" + i + " : " + returnvalue[i].topictype + " : " + returnvalue[i].topicid + " : " + returnvalue[i].count);
// 			}
//		}
	}
	if( e.action == 0) {//connect() 메소드로 Push 서버 연결에 성공했을 때
		/*trace("connection success");*/
		
		/*Push server에 토픽 등록 */
		/* layout id와 데이터셋 컬럼명 이 동일해야함 */
		/* 첫번째 컬럼명은 topic_id  */
		if(this.div_login.form.edt_userId.value == "admin"){
			this.XPush00.subscribe( "NOTI", "ADMIN",  this, this.objApp.gdsMessage,  "insert", "fn_PushCallback"  );
		}else{
			this.XPush00.subscribe( "NOTI", "GROUP",  this, this.objApp.gdsMessage,  "insert", "fn_PushCallback"  );
		}
	}
	if(e.action == 1){//disconnect() 메소드로 Push 서버의 연결해제에 성공했을 때 
		//alert("Xpush 연결 해제");
	}
	if( e.action == 2) {//subscribe() 메소드로 Topic 추가에 성공했을 때
		//alert("subscrive success");
		/* 미수신 메시지 요청 */
		this.XPush00.requestMessage(e.message.messagetype, e.message.messagekey);
	}if(e.action == 4) {//requestMessage() 메소드로 미수신 메시지 요청에 성공했을 때
		
	}
	//admin 사용자 등록 성공
	if(e.action == 8) {//registerTopicWithUserID() 메소드로 미수신 메시지 요청에 성공했을 때
		this.alert("사용자 등록에 성공했습니다");
	}
};

this.fn_PushCallback = function (Row, ChangeColumn, AllColumns, Type, ActionType, MessageId) 
{
// 	trace("fn_PushCallback\n" +
// 		" - ActionType : " + ActionType + "\n" +
// 		" - Row : " + Row + "\n" +
// 		" - MessageId : " + MessageId + "\n" );
		
	this.MsgCheck.push(MessageId);
	this.setTimer(1, 1000)
	
	if (ActionType == "PUSH") {
		trace("------------------------------");
		trace(this.objApp.gdsMessage.getColumn(Row, "TOPIC_ID"));
		trace(this.objApp.gdsMessage.getColumn(Row, "DATA_01"));
		trace(this.objApp.gdsMessage.getColumn(Row, "DATA_02"));
	}
	
	if (ActionType == "RELI") {
		trace("------------------------------");
		trace(this.objApp.gdsMessage.getColumn(Row, "TOPIC_ID"));
		trace(this.objApp.gdsMessage.getColumn(Row, "DATA_01"));
		trace(this.objApp.gdsMessage.getColumn(Row, "DATA_02"));
		trace(this.objApp.gdsMessage.saveXML());
	}
}

this.logIn_onkeydown = function(obj:nexacro.Form,e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13)
	{
		this.fn_dologin();
	}
};
]]></Script>
    <Objects>
      <XPush id="XPush00" onerror="XPush00_onerror" onsuccess="XPush00_onsuccess" layouturl="push_url::push_message_layout.xml"/>
    </Objects>
  </Form>
</FDL>
